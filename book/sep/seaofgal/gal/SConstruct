from rsf.proj import *
from galilee import Galilee

Galilee('sea',150,150)

def grey(title):
    return '''
    grey transp=n yreverse=n allpos=y clip=40 title="%s"
    ''' % title

Plot('sea',grey('Sea of Galilee - sparse grid'))

Galilee('sea2',300,300)

x = 205
y = 242
w = 4

Flow('frame.asc',None,
     'echo %s n1=10 data_format=ascii_int in=$TARGET' % \
     ' '.join(map(str,(x,y,x+w,y,x+w,y+w,x,y+w,x,y))))
Plot('frame','frame.asc',
     '''
     dd type=complex form=native |
     graph min1=198 max1=212 min2=233 max2=257 pad=n plotfat=10 plotcol=3
     wantaxis=n wanttitle=n
     ''')
Plot('sea2',grey('Sea of Galilee - patch'))
Plot('frame2','sea2 frame','Overlay')

Result('galsea','sea frame2','SideBySideAniso')

for case in range(3):
    pat = 'pat%d' % case
    n = (25,50,100)[case]
    title = ('sparse','medium','dense')[case]
    Galilee(pat,n,n,xmin=x,xmax=x+w,ymin=y,ymax=y+w)
    Plot(pat,
         grey('Patch - %s grid' % title) +
         ' clip=20 bias=20 allpos=n labelsz=12 titlesz=15')

Result('galpat','pat0 pat1 pat2','SideBySideAniso')

Flow('tens lags',None,'tspline tension=0 eps=5.e-3 lag=${TARGETS[1]}')
Galilee('int',100,100,interp=2,xmin=x,xmax=x+w,ymin=y,ymax=y+w,
        shape='inv',extra='filt=tens.rsf niter=100 verb=y')
Depends('int.rsf','tens.rsf')

Flow('lag.asc',None,
     'echo 101 n1=1 n=100,100 in=$TARGET data_format=ascii_int')
Flow('lag','lag.asc','dd form=native')
Flow('flt.asc','lag',
     'echo -1 n1=1 lag=$SOURCE in=$TARGET data_format=ascii_int',
     stdin=0)
Flow('flt','flt.asc','dd form=native type=float')

Flow('illum','int flt','helicon filt=${SOURCES[1]}')





for case in ('pat2','int','illum'):
    Plot(case+'-win',case,
         '''
         window f1=5 n1=90 f2=5 n2=90 |
         grey transp=n yreverse=n title="%s"
         labelsz=12 titlesz=15 
         ''' % ('Inverse interpolation','Simple binning')[case=='pat2'])
Result('gallap','int-win illum-win pat2-win','SideBySideAniso')

End()
