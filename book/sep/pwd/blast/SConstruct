from rsf.proj import *

Fetch('blast.46.H','blast')

Flow('data','blast.46.H','dd form=native | window f1=150 n1=150')

Flow('mask','data',
     'math output="abs(input)" | mask min=0.00001 | dd type=float')
Flow('dip','data mask',
     '''
     dip verb=y rect1=10 rect2=5 rect3=5
     order=2 niter=10 mask=${SOURCES[1]}
     ''')
Flow('miss','data mask dip',
     '''
     planemis3 mask=${SOURCES[1]} dip=${SOURCES[2]}
     order=2 niter=200 verb=y | bandpass fhi=50
     ''')

Flow('pwd','miss dip','pwd dip=${SOURCES[1]} order=2')

Flow('miss-rand','data mask dip',
     '''
     planemis3 mask=${SOURCES[1]} dip=${SOURCES[2]}
     order=2 niter=200 verb=y var=8e-8 | bandpass fhi=50
     ''')

for case in ['data','miss','miss-rand']:
    Flow(case+'bin',case,'byte clip=.0007')
    plots = []

    for wind in range(12):
        plots.append(case + str(wind))
        Plot(plots[wind],case+'bin',
             '''window n3=1 f3=%d |
             grey crowd=0.95 wanttitle=n
             ''' % wind)

    Plot(case+'top',plots[0:4],'SideBySideAniso')
    Plot(case+'mid',plots[4:8],'SideBySideAniso')
    Plot(case+'bot',plots[8:12],'SideBySideAniso')
    Plot(case,[case+x for x in ['top','mid','bot']],'OverUnderAniso')
Result('passfill','data miss','SideBySideAniso')


End()
