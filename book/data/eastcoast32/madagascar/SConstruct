from __future__ import print_function
from rsf.proj import * 

#SConscript('../fetch/SConstruct')
# SConstript will always rerun oher directory, I think because env changes.
# perhaps scons sees PWD or DATAPATH has changed.  This works:
import os
os.system('cd ../fetch; scons')

# to look at first breaks on shots with 0 time delay:
# <allshots.su  suwind key=ep min=3577 max=3607 |  suximage perc=90

# view the observer notes:
pdfread = WhereIs('acroread') or WhereIs('kpdf') or WhereIs('evince') or \
    WhereIs('xpdf') or WhereIs('gv') or WhereIs('open')
if pdfread:
   Result('observerlog','../fetch/32obslog.pdf',
          pdfread + ' ${SOURCES[0]}',stdin=0)

# convert, and view previous processing stack
file='checkstack'
Flow([file, file+'_hdr', file+'.bin', file+'.asc'],
     '../fetch/CSDS32_1.SGY',
     '''
     sfsegyread  tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}
     ''')

Result('checkstack','checkstack',
       'sfgrey title="checkstack" perc=90')
Result('zoomcheckstack','checkstack',
       '''
       sfwindow min1=0 max1=3  |
       sfgrey title="zoom checkstack" perc=90
       ''')

# sfwindow pads all traces to the same time length
segyread='''
         sfsegyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}
         | sfwindow max1=12.28
         '''

rawsegy=['U32A_01','U32A_02','U32A_03','U32A_04','U32A_05',
         'U32A_06','U32A_07','U32A_08','U32A_09','U32A_10',
         'U32A_11','U32A_12','U32A_13','U32A_14','U32A_15',
         'U32A_16','U32A_17','U32A_18','U32A_19','U32A_20',
	 'U32A_21']

# after reading the observer logs, running segyread and running surange 
# and sugethw a few times I learned two files have some special problems 
# that need to be fixed:
# 'U32A_04' needs to have fldr 688 and 689 removed 
# 'U32A_17' needs to have fldr 500-510 renumberred to 700-710 

# this is the list of segy files that do not need fixes:
easysegy=['U32A_01','U32A_02','U32A_03','U32A_05',
         'U32A_06','U32A_07','U32A_08','U32A_09','U32A_10',
         'U32A_11','U32A_12','U32A_13','U32A_14','U32A_15',
         'U32A_16','U32A_18','U32A_19','U32A_20',
	 'U32A_21']

# there are also 'U32B_01','U32B_02','U32B_03'
# and  'U32C_01','U32C_02','U32C_03'
# and 'U32_01'
# The line is collected in 3 parts. 32, 32a, and 32b.  There is plenty
# to use on line 32A, so no attempt is made to process the other parts of 
# the line

for file in easysegy  :
    Flow([file, file+'_hdr', file+'.bin', file+'.asc'],
         '../fetch/'+file+'.SGY',
         '''
         sfsegyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}
         | sfwindow max1=12.28
         ''')

    Flow(file+'.txt',file+'_hdr','sfheaderattr | tee ${TARGETS[0]}',stdout=-1)

# now handle the tapes that need fixes (U32A_04 and U32A_17).
# 'U32A_04' needs to have fldr 688 and 689 removed 
# 'U32A_17' needs to have fldr 500-510 renumberred to 700-710 

# for U32A_04, make temporary files U32A_04t.rsf U32A_04t_hdr.rsf and run it 
# through sftahsort | sftahwrite remove the unwanted fldr's.  first sort key 
# tracr is the trace number on the reel, so traces will remain in same order 
# as input

file='U32A_04'
Flow([file+'t', file+'t_hdr', file+'.bin',  file+'.asc'],
     '../fetch/'+file+'.SGY',
     '''
     sfsegyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}
     | sfwindow max1=12.28
     ''')

# sftahsort will select a range on the header.  Put tracr first will keep traces
# in original order.  fldr:690,99999 will elliminate the low numberred shots 
# 688 and 689.
Flow([file, file+'_hdr'],[file+'t', file+'t_hdr'],
     '''
     sftahsort input=${SOURCES[0]} \
               sort="tracr fldr:690,99999" \
     | sftahwrite output=${TARGETS[0]} \
               mode=seq \
     ''',stdin=0,stdout=0)
Flow(file+'.txt',file+'_hdr','sfheaderattr | tee ${TARGETS[0]}',stdout=-1)

# 'U32A_17' needs to have fldr 500-510 renumberred to 700-710.  Again make 
# temporary files U32A_17t.rsf and U32A_17t_hdr.rsf and use a custom python
# program (sftahfix_hdr_17) to renumber these fldr's.
file='U32A_17'
Flow([file+'t', file+'t_hdr', file+'.bin',  file+'.asc'],
     '../fetch/'+file+'.SGY',
     '''
     sfsegyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}
     | sfwindow max1=12.28
     ''')
Flow([file, file+'_hdr'],[file+'t', file+'t_hdr','./sftahfix_hdr_17.py'],
     '''
     sftahread input=${SOURCES[0]} \
     | ./sftahfix_hdr_17.py \
     | sftahwrite output=${TARGETS[0]} \
               mode=seq \
     ''',stdin=0,stdout=0)
Flow(file+'_list1',file+'_hdr','sfheaderattr | tee ${TARGETS[0]}',stdout=-1)

# concatinate the input rsf files to create line.rsf (all traces before 
# loading headers)
numsegy=len(rawsegy)
print('numsegy=%d\n'%numsegy)
Flow('line',rawsegy,'sfcat axis=2 ${SOURCES[:%d]}'%numsegy, stdin=0)

# use python's list comprehension to make rawsegy_hdr list from the rawsegy list
rawsegy_hdr=[file+'_hdr'  for file in rawsegy]
print('rawsegy_hdr=',rawsegy_hdr)

# concatinate the input _hdr.rsf files to make line_hdr.rsf
numsegy=len(rawsegy)
Flow('line_hdr',rawsegy_hdr,'sfcat axis=2 ${SOURCES[:%d]}'%numsegy, stdin=0)

# make simple lists and displays before loading trace headers
Flow('list1.txt','line_hdr','sfheaderattr | tee ${TARGETS[0]}',stdout=-1)

#allshots is the name of the file after geometry is loaded in headers

# display the first 3000 traces, notice shots have different recording delay
Result('first','line',
       'sfwindow n2=3000 | sfgrey perc=90')

# display a 160 traces selected to show different recording delays
Result('zoomfirst','line',
       '''
       sfwindow min2=48141 max2=48300 min1=0 max1=3 |
       sfgrey perc=90
       ''')

# make movie of 10 shots (48 traces/shot)
Result('firstmovie','line',
       '''
       sfwindow n2=4800 |sfput n2=48 n3=10
       | sfgrey title="first 10 shots" perc=20 
       ''')

# display 160 traces
Result('firstrec24','line',
       '''
       sfwindow min2=48141 max2=48300 min1=0 max1=6 |
       sfgrey perc=90
       ''')

# The near trace gather (ntg) does not have the recording delay applied, so 
# the deep water portion of the line is displayed without the 1, 2, 3, or 4 
# seconds delay applied.

Flow('ntg','line',
       'sfput n2=48 n3=4792 | sfwindow  min2=48 max2=48')

# sftahsort is faster because headers are used to select traces, 
# but tracr is reel by reel.  no key to keep traces in original order
#Flow('ntg ntg_hdr','line line_hdr',
#     '''
#     sftahsort sort="tracr tracf:48,48" input=${SOURCES[0]} \
#     | sftahwrite output=${TARGETS[0]} mode=seq \
#     ''',stdin=0,stdout=0)

Result('ntg','ntg',
       'sfgrey perc=90 title=ntg')

# make zoomable near trace gather (ntg) display
Flow('nothing','ntg','sfimage perc=97')

#allshots is the name of the file after geometry is loaded in headers
Flow('allshots.rsf allshots_hdr.rsf',
     'line.rsf line_hdr.rsf ./sftahloadgeom.py',
     '''
     sftahread input=${SOURCES[0]} \
     | ./sftahloadgeom.py \
     | sftahheadermath outputkey=sstat output=delrt \
     | sftahheadermath outputkey=gstat output=0     \
     | sftahstatic sign=-1 \
     | sftahwrite output=$TARGET mode=seq \
     ''',stdin=0,stdout=0)

#print summary of trace headers
Flow('allshots_hdr.txt','allshots_hdr',
     'sfheaderattr | tee ${TARGETS[0]}',stdout=-1)

# make fold plot using offset, cdp and trid.  trid is used as a dummy
Flow('foldplot.rsf','allshots_hdr.rsf',
     '''
     sffold
         verbose=1 \
         o1=470 n1=71 d1=50 label1=offset \
	 o2=101 n2=5578 d2=1  label2=cdp \
         o3=1 n3=1 d3=1 label3=trid 
     ''')

# plot (offset,cdp) trace distribution.
Result('foldplot',' sfgrey title="cdp,offset trace distribution" ')
# zoom (offset,cdp) trace distribution plot.  Notice some missed shots
Result('zoomfoldplot','foldplot',
       '''
       sfwindow min2=800 max2=1400 
        | sfgrey  title="cdp,offset trace distribution. shooting dir left" 
       ''')

# apply time delay and check on near trace gather
Flow('ntgdelay ntgdelay_hdr','allshots allshots_hdr',
     '''
     sftahsort sort="fldr tracf:48,48" input=$SOURCE \
     | sftahwrite output=$TARGET mode=seq \
     ''',stdin=0,stdout=0)
Result('ntgdelay','ntgdelay',
       'sfgrey perc=90 title=ntgdelay')

# remove 51 ms delay and plot data to check work
# after nmo waterbottom multiple should be twice waterbottom time and 
# reverse polarity. On sfimage display mouse button 2 to turn print on of
# cursor (cdp,t,amplitude).  Zoom and time onset of black on water bottom.
# Zoom and time onset of white on watbot multiple.  On first trace I measure
# wat bot at 5.086s and multipelat 10.1785.  6 ms off. Pretty close.  
Flow('ntg_static ntg_static_hdr','ntgdelay ntgdelay_hdr',
     '''
     sftahsort sort="fldr:1,1000 cdp:1,999999 tracf:48,48" input=$SOURCE \
     | sftahheadermath outputkey=sstat output=51 \
     |  sftahstatic sign=1 \
     | sftahgain tpow=1 \
     | sftahpef maxlag=.100 \
     | sftahnmo tnmo=0 vnmo=1500 \
     | sftahwrite output=$TARGET mode=seq \
     ''',stdin=0,stdout=0)

# plot a zoomable near trace gather (ntg) plot
Flow('ntg_static.txt','ntg_static',
     'sfimage perc=97',stdout=0)

# make movie of 20 shotpoints
Result('secondmovie','allshots',
       '''
       sfwindow n2=9600 
       | sfput n2=48 n3=200 
       | sfgrey
       ''')
# make movie of 20 shotpoints with tpow applied
Result('thirdmovie','allshots',
       '''
       sfwindow n2=9600 
       | sfput n2=48 n3=200  
       | sftpow tpow=1.0 
       | sfgrey title="shots with tpow=1.0" perc=99
       ''')

# sort to cdp gathers
Flow('cdps.rsf cdps_hdr.rsf','allshots.rsf allshots_hdr.rsf',
     '''
     sftahsort sort="cdp:1,999999 offset" input=$SOURCE \
     | sftahheadermath outputkey=sstat output=51 \
     |  sftahstatic sign=1 \
     | sftahgain tpow=1.5 \
     | sftahmute xmute=0,4000 tmute=0,4 \
     | sftahpef maxlag=.100 \
     | sftahwrite output=$TARGET mode=seq \
     ''',stdin=0,stdout=0)

# Velocity analysis would be nice.  Best example may be oren's 
# teapotdome paper.

# need to have space variant velocity for decent result because water depth
# varies so much.  Best example maybe in teapotdome/vels.
# For now I will just put a single velocity function from cdp 4851.

# stack the cdp gathers
Flow('stack.rsf stack_hdr.rsf','cdps.rsf cdps_hdr.rsf',
     '''
     sftahread input=$SOURCE \
     | sftahnmo \
        tnmo=0.10779,4.53796,5.34639,6.13326,7.30401,7.93825,8.9572,12.319 \
	vnmo=1497.16,1506.74,1546.42,1661.37,1892,2060,2288,2384.21 \
     | sftahstack key=cdp \
     | sftahwrite output=$TARGET mode=seq \
     ''',stdin=0,stdout=0)

# display the stack
Result('stack','stack',
       '''
       sfgrey title="stack"  perc=90
       ''')
Result('zoomstack','stack',
       '''
       sfwindow min1=3 max1=10 min2=3000 | sfgrey title="stack"  perc=90
       ''')
Result('zoomstack1','stack',
       '''
       sfwindow min1=0 max1=7 max2=3000 | sfgrey title="stack"  perc=90
       ''')

End()
