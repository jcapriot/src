import os, sys, string
sys.path.append('../../framework')
import bldutil

try: # distribution version
    Import('env root libdir incdir bindir pkgdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../lib/SConstruct')

plplot = env.get('PLPLOT')
plplotlibpath = env.get('PLPLOTLIBPATH','')

##############################################################################
# Loadable PLPLOT driver
##############################################################################

inc = env.RSF_Include('plvpl')
env.Ignore('plvpl.h','plvpl.h')

if plplot:
    env.Prepend(CPPPATH=['../../include',env.get('PLPLOTPATH')],
                LIBPATH=['../../lib'])

    if plplotlibpath:
        env.Prepend(LIBPATH=[plplotlibpath])

    if env['PLATFORM'] == 'cygwin':
        dlib = env.LoadableModule('plvpl','plvpl.c',
                              LIBS=['libdrsf','libdrsfplot',plplot],
                              LDMODULEPREFIX='')
    else:
        dlib = env.LoadableModule('plvpl','plvpl.c',
                                  LIBS=['drsf','drsfplot',plplot],
                                  LDMODULESUFFIX='.so',
                                  LDMODULEPREFIX='',
                                  FRAMEWORKSFLAGS='-flat_namespace '
                                  '-undefined suppress')

    if root:
        install = env.Install(libdir,[dlib,'plvpl.rc'])
        env.InstallAs(os.path.join(libdir,'plvpl.driver_info'),'plvpl.rc')

        if env['PLATFORM'] == 'darwin':
            for lib in ('rsf','rsfplot'):
                env.AddPostAction(install[0],
                                  '%s -change build/%s/libd%s.dylib '
                                  '%s/libd%s.dylib %s' % \
                (WhereIs('install_name_tool'),
                 {'rsf':'api/c','rsfplot':'plot/lib'}[lib],
                    lib,libdir,lib,install[0]))

##############################################################################
# Plot tools
##############################################################################

progs = 'plsurf'
mains = Split(progs)
libprefix = env.get('DYNLIB','')

for prog in mains:
    if plplot:
        main = env.Program(prog + '.c',
                           LIBS=[libprefix+'rsf', libprefix+'rsfplot', plplot]+\
                                env.get('LIBS',[]))
    else:
        main = env.RSF_Place('sf'+prog,None,package='libplplot-dev')
    if root:
        install = env.Install(bindir,main[0])

if root:
    main = 'sfplplot.py'

    docs = list(map(env.Doc,mains))
    env.Depends(docs,'#/framework/rsf/doc.py')
    doc = env.RSF_Docmerge(main,docs)

    env.Install('../../framework/rsf',doc)
    env.Install(pkgdir,doc)
