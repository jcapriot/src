import os, sys, string
sys.path.append('../../framework')
import bldutil

progs = '''
bargraph box contour contour3 dots graph graph3 grey grey3 grey4 plas
pldb plotrays thplot vplotdiff wiggle
'''

try:
    Import('env root bindir libdir pkgdir')
    env = env.Clone()
    alias = {'grey':['byte','bar'],'grey3':['cubeplot']}
except:
    env = bldutil.Debug()
    root = None
    SConscript('../lib/SConstruct')

libprefix = env.get('DYNLIB','')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=[libprefix+'rsfplot', libprefix+'rsf'])

mains = Split(progs)

docalias={}
for prog in mains:
    main = env.Program(prog + '.c')
    if root:
         install = env.Install(bindir,main[0])

         if libprefix and env['PLATFORM'] == 'darwin':
             env.AddPostAction(install,
             '%s -change build/api/c/libdrsf.dylib '
             '%s/libdrsf.dylib %s' % \
                 (WhereIs('install_name_tool'),libdir,install[0]))
             env.AddPostAction(install,
             '%s -change build/plot/lib/libdrsfplot.dylib '
             '%s/libdrsfplot.dylib %s' % \
                 (WhereIs('install_name_tool'),libdir,install[0]))
         
         if prog in alias.keys():
             for al in Split(alias[prog]):
                 copy = str(main[0]).replace(prog,al)
                 env.InstallAs(os.path.join(bindir,copy),main[0])
                 doc = os.path.splitext(copy)[0]
                 docalias[doc] = 'sf'+prog

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfplot.py'

    docs = list(map(env.Doc,mains))
    env.Depends(docs,'#/framework/rsf/doc.py')
    doc = env.RSF_Docmerge(main,docs,alias=docalias)

    env.Install('../../framework/rsf',doc)
    env.Install(pkgdir,doc)
