import os, sys, string
sys.path.append('../../framework')
import bldutil

progs = '''
image
wigb
'''

try:
    Import('env root pkgdir bindir')
    env = env.Clone()
except:
    env = bldutil.Debug()
    root = None
    SConscript('../lib/SConstruct')

src = Glob('[a-z]*.c')

xinc = env.get('XINC')
xlib = env.get('XLIBPATH')

if xinc and xlib:  
    env.Prepend(CPPPATH=['../../include',xinc],
                LIBPATH=['../../lib',xlib],
                LIBS=['X11','su',env.get('DYNLIB','')+'rsf'])
    
    for source in src:
        inc = env.RSF_Include(source,prefix='')
        obj = env.StaticObject(source)
        env.Ignore(inc,inc)
        env.Depends(obj,inc)

mains = Split(progs)
for prog in mains:
    if xinc and xlib:
        sources = ['X' + prog]
        bldutil.depends(env,sources,'X'+prog)
        main = env.Program(prog,[x + '.c' for x in sources])
    else:
        main = env.RSF_Place('sf'+prog,None,var='XINC and XLIBPATH')
        
    if root:
        env.Install(bindir,main[0])

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfsuplot.py'

    if xinc and xlib:
        docs = [env.Doc(prog,'X' + prog) for prog in mains]
        env.Depends(docs,'#/framework/rsf/doc.py')
    else:
        docs = []

    doc = env.RSF_Docmerge(main,docs)

    env.Install('../../framework/rsf',doc)
    env.Install(pkgdir,doc)
