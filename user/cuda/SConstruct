import os, sys, string
sys.path.append('../../framework')
import bldutil

try:  # distributed version
    Import('env root pkgdir bindir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../../api/c/SConstruct')

progs = '''
gpuktmig
'''

CTP = env.get('CUDA_TOOLKIT_PATH')
NVCC = env.get('NVCC')

env.Append(LIBS=[env.get('DYNLIB','')+'rsf'],
           CPPPATH=['../../include'],
           LIBPATH=['../../lib'])

if CTP:
    env.Append(LIBS=['cudart'],
               LIBPATH=filter(os.path.isdir,[os.path.join(CTP,'lib64'),
                                             os.path.join(CTP,'lib')]))

mains = Split(progs)
for prog in mains:
    if CTP and NVCC:
        cfile = env.Command(prog+'.c','M'+prog+'.cu','cp $SOURCE $TARGET')
        cc = env.get('CC')
        cflags = [env.get('CUDAFLAGS'),env.get('CUDAFLAGS') +' -g']
        ldflags = ''
        if cc.rfind('icc') >= 0:
            cflags[0] = cflags[0] + ' -ccbin=%s' % cc
            cflags[1] = cflags[1] + ' -ccbin=%s' % cc
            ldflags = '-ccbin=%s' % cc
        prog = env.Program(cfile,
                           CC=NVCC,
                           LINKFLAGS=ldflags,
                           CFLAGS=cflags[root==None])
    else:
        prog = env.RSF_Place('sf'+prog,None,
                             message='''
                             Please check if CUDA is not missing and is installed correctly.
                             Rerun Madagascar installation after it has been fixed.
                             ''')
    if root:
        env.Install(bindir,prog)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    user = os.path.basename(os.getcwd())
    main = 'sf%s.py' % user

    docs = map(lambda prog: env.Doc(prog,'M' + prog+'.cu'),mains)
    env.Depends(docs,'#/framework/rsf/doc.py')	
    
    doc = env.RSF_Docmerge(main,docs)
    env.Install(pkgdir,doc)

